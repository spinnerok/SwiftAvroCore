#if !canImport(ObjectiveC)
import XCTest

extension AvroDecodableTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AvroDecodableTest = [
        ("testArray", testArray),
        ("testBoolean", testBoolean),
        ("testBytes", testBytes),
        ("testDate", testDate),
        ("testDouble", testDouble),
        ("testDuration", testDuration),
        ("testEnum", testEnum),
        ("testField", testField),
        ("testFixed", testFixed),
        ("testFloat", testFloat),
        ("testInnerDuration", testInnerDuration),
        ("testInt", testInt),
        ("testLong", testLong),
        ("testMap", testMap),
        ("testPerformanceExample", testPerformanceExample),
        ("testRecord", testRecord),
        ("testString", testString),
        ("testUnion", testUnion)
    ]
}

extension AvroEncodableTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AvroEncodableTest = [
        ("testArray", testArray),
        ("testBoolean", testBoolean),
        ("testBytes", testBytes),
        ("testDate", testDate),
        ("testDouble", testDouble),
        ("testDuration", testDuration),
        ("testEnum", testEnum),
        ("testFixed", testFixed),
        ("testFloat", testFloat),
        ("testInnerDuration", testInnerDuration),
        ("testInt", testInt),
        ("testLong", testLong),
        ("testMap", testMap),
        ("testNestedRecord", testNestedRecord),
        ("testPerformanceExample", testPerformanceExample),
        ("testRecord", testRecord),
        ("testString", testString),
        ("testTime", testTime),
        ("testUnion", testUnion)
    ]
}

extension AvroSchemaCodingTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AvroSchemaCodingTest = [
        ("testArray", testArray),
        ("testBoolean", testBoolean),
        ("testBytes", testBytes),
        ("testDate", testDate),
        ("testDouble", testDouble),
        ("testDuration", testDuration),
        ("testEnum", testEnum),
        ("testFixed", testFixed),
        ("testFloat", testFloat),
        ("testInt", testInt),
        ("testLogicDecimalBytes", testLogicDecimalBytes),
        ("testLogicDecimalFixed", testLogicDecimalFixed),
        ("testLong", testLong),
        ("testMap", testMap),
        ("testMicrosecond", testMicrosecond),
        ("testMillisecond", testMillisecond),
        ("testNull", testNull),
        ("testPerformanceExample", testPerformanceExample),
        ("testRecord", testRecord),
        ("testString", testString),
        ("testTimestampMicro", testTimestampMicro),
        ("testTimestampMilli", testTimestampMilli),
        ("testUnion", testUnion)
    ]
}

extension AvroSchemaEquatableTest {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AvroSchemaEquatableTest = [
        ("testArray", testArray),
        ("testBoolean", testBoolean),
        ("testBytes", testBytes),
        ("testDouble", testDouble),
        ("testEnum", testEnum),
        ("testFixed", testFixed),
        ("testFloat", testFloat),
        ("testInt", testInt),
        ("testLong", testLong),
        ("testMap", testMap),
        ("testNull", testNull),
        ("testPerformanceExample", testPerformanceExample),
        ("testRecord", testRecord),
        ("testString", testString),
        ("testUnion", testUnion)
    ]
}

extension SwiftAvroCoreTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SwiftAvroCoreTests = [
        ("testExample", testExample)
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AvroDecodableTest.__allTests__AvroDecodableTest),
        testCase(AvroEncodableTest.__allTests__AvroEncodableTest),
        testCase(AvroSchemaCodingTest.__allTests__AvroSchemaCodingTest),
        testCase(AvroSchemaEquatableTest.__allTests__AvroSchemaEquatableTest),
        testCase(SwiftAvroCoreTests.__allTests__SwiftAvroCoreTests)
    ]
}
#endif
